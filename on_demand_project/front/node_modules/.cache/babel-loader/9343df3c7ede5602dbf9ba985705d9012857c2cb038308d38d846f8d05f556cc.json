{"ast":null,"code":"var _jsxFileName = \"/Users/roman/PythonLocalProjects/ZipShip/on_demand_project/front/src/components/Calculator/Calculator.js\";\nimport React, { Component, Suspense } from \"react\";\nimport TempInputs from \"./TempInputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoilingVerdict = /*#__PURE__*/React.lazy(_c = () => import(\"./BoilingVerdict\"));\n_c2 = BoilingVerdict;\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded;\n}\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'temperature': 0,\n      scale: 'c'\n    };\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n  }\n  handleCelsiusChange(temperature) {\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n  async render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    await /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TempInputs, {\n        scaleName: 'c',\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TempInputs, {\n        scaleName: 'f',\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n        fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 37\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n          celsius: parseFloat(celsius)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Calculator;\nvar _c, _c2;\n$RefreshReg$(_c, \"BoilingVerdict$React.lazy\");\n$RefreshReg$(_c2, \"BoilingVerdict\");","map":{"version":3,"names":["React","Component","Suspense","TempInputs","BoilingVerdict","lazy","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","Calculator","constructor","props","state","scale","handleCelsiusChange","bind","handleFahrenheitChange","setState","render"],"sources":["/Users/roman/PythonLocalProjects/ZipShip/on_demand_project/front/src/components/Calculator/Calculator.js"],"sourcesContent":["import React, {Component, Suspense} from \"react\";\nimport TempInputs from \"./TempInputs\";\n\n\nconst BoilingVerdict = React.lazy(() => import(\"./BoilingVerdict\"));\nfunction toCelsius(fahrenheit){\n        return (fahrenheit - 32) * 5 / 9;\n    }\nfunction toFahrenheit(celsius){\n    return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert){\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)){\n        return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded;\n}\nclass Calculator extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {'temperature': 0, scale: 'c'};\n        this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n        this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    }\n\n    handleCelsiusChange(temperature) {\n        this.setState({scale: 'c', temperature});\n    }\n    handleFahrenheitChange(temperature) {\n        this.setState({scale: 'f', temperature});\n    }\n    async render(){\n\n        const scale = this.state.scale;\n        const temperature = this.state.temperature;\n        const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n        const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n        await (\n            <div>\n                <TempInputs scaleName={'c'} temperature={celsius} onTemperatureChange={this.handleCelsiusChange}/>\n                <TempInputs scaleName={'f'} temperature={fahrenheit} onTemperatureChange={this.handleFahrenheitChange}/>\n                <Suspense fallback={<div>Loading ...</div>}>\n                    <BoilingVerdict celsius={parseFloat(celsius)}/>\n                </Suspense>\n            </div>\n        )\n    }\n}\n\nexport default Calculator;"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,UAAU,MAAM,cAAc;AAAC;AAGtC,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,IAAI,MAAC,MAAM,MAAM,CAAC,kBAAkB,CAAC,CAAC;AAAC,MAA9DD,cAAc;AACpB,SAASE,SAAS,CAACC,UAAU,EAAC;EACtB,OAAO,CAACA,UAAU,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC;AACpC;AACJ,SAASC,YAAY,CAACC,OAAO,EAAC;EAC1B,OAAQA,OAAO,GAAG,CAAC,GAAG,CAAC,GAAI,EAAE;AACjC;AAEA,SAASC,UAAU,CAACC,WAAW,EAAEC,OAAO,EAAC;EACrC,MAAMC,KAAK,GAAGC,UAAU,CAACH,WAAW,CAAC;EACrC,IAAII,MAAM,CAACC,KAAK,CAACH,KAAK,CAAC,EAAC;IACpB,OAAO,EAAE;EACb;EACA,MAAMI,MAAM,GAAGL,OAAO,CAACC,KAAK,CAAC;EAC7B,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,GAAG,IAAI,CAAC,GAAG,IAAI;EAChD,OAAOC,OAAO;AAClB;AACA,MAAMG,UAAU,SAASpB,SAAS;EAC9BqB,WAAW,CAACC,KAAK,EAAE;IACf,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MAAC,aAAa,EAAE,CAAC;MAAEC,KAAK,EAAE;IAAG,CAAC;IAC3C,IAAI,CAACC,mBAAmB,GAAG,IAAI,CAACA,mBAAmB,CAACC,IAAI,CAAC,IAAI,CAAC;IAC9D,IAAI,CAACC,sBAAsB,GAAG,IAAI,CAACA,sBAAsB,CAACD,IAAI,CAAC,IAAI,CAAC;EACxE;EAEAD,mBAAmB,CAACf,WAAW,EAAE;IAC7B,IAAI,CAACkB,QAAQ,CAAC;MAACJ,KAAK,EAAE,GAAG;MAAEd;IAAW,CAAC,CAAC;EAC5C;EACAiB,sBAAsB,CAACjB,WAAW,EAAE;IAChC,IAAI,CAACkB,QAAQ,CAAC;MAACJ,KAAK,EAAE,GAAG;MAAEd;IAAW,CAAC,CAAC;EAC5C;EACA,MAAMmB,MAAM,GAAE;IAEV,MAAML,KAAK,GAAG,IAAI,CAACD,KAAK,CAACC,KAAK;IAC9B,MAAMd,WAAW,GAAG,IAAI,CAACa,KAAK,CAACb,WAAW;IAC1C,MAAMF,OAAO,GAAGgB,KAAK,KAAK,GAAG,GAAGf,UAAU,CAACC,WAAW,EAAEL,SAAS,CAAC,GAAGK,WAAW;IAChF,MAAMJ,UAAU,GAAGkB,KAAK,KAAK,GAAG,GAAGf,UAAU,CAACC,WAAW,EAAEH,YAAY,CAAC,GAAGG,WAAW;IACtF,mBACI;MAAA,wBACI,QAAC,UAAU;QAAC,SAAS,EAAE,GAAI;QAAC,WAAW,EAAEF,OAAQ;QAAC,mBAAmB,EAAE,IAAI,CAACiB;MAAoB;QAAA;QAAA;QAAA;MAAA,QAAE,eAClG,QAAC,UAAU;QAAC,SAAS,EAAE,GAAI;QAAC,WAAW,EAAEnB,UAAW;QAAC,mBAAmB,EAAE,IAAI,CAACqB;MAAuB;QAAA;QAAA;QAAA;MAAA,QAAE,eACxG,QAAC,QAAQ;QAAC,QAAQ,eAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAuB;QAAA,uBACvC,QAAC,cAAc;UAAC,OAAO,EAAEd,UAAU,CAACL,OAAO;QAAE;UAAA;UAAA;UAAA;QAAA;MAAE;QAAA;QAAA;QAAA;MAAA,QACxC;IAAA;MAAA;MAAA;MAAA;IAAA,QAElB;EACL;AACJ;AAEA,eAAeY,UAAU;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}